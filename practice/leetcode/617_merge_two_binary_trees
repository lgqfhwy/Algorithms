// https://leetcode-cn.com/problems/merge-two-binary-trees/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        if (!root1 && !root2) {
            return NULL;
        }
        TreeNode* root = new TreeNode(0);
        TreeNode* left = NULL;
        TreeNode* right = NULL;
        if (root1 && root2) {
            root->val = root1->val + root2->val;
            left = mergeTrees(root1->left, root2->left);
            right = mergeTrees(root1->right, root2->right);
        } else if (root1 && !root2) {
            root->val = root1->val;
            left = mergeTrees(root1->left, NULL);
            right = mergeTrees(root1->right, NULL);
        } else if (!root1 && root2) {
            root->val = root2->val;
            left = mergeTrees(NULL, root2->left);
            right = mergeTrees(NULL, root2->right);
        }
        root->left = left;
        root->right = right;
        return root;
    }
};